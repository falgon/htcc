name: CI
on:
  push:
    branches:
      - master
      - develop

jobs:
    test:
        name: htcc test
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os:
                    - ubuntu-18.04
                    - ubuntu-16.04
                # - windows-latest
                # - macos-latest
                ghc: ["8.6.5"]
                cabal: ["3.0"]
                cache-version: ["v4"]
        steps:
            - uses: actions/checkout@v2
            - name: Cache .stack
              id: cache-stack
              uses: actions/cache@v1
              with:
                  path: ~/.stack
                  key: ${{ matrix.cache-version }}-${{ runner.os }}-stack-${{ hashFiles('**/stack.yaml.lock') }}
                  restore-keys: ${{ matrix.cache-version }}-${{ runner.os }}-stack-
            - name: Setup Haskell to ${{ matrix.os }} (GHC ${{ matrix.ghc }})
              uses: actions/setup-haskell@v1
              with:
                  ghc-version: ${{ matrix.ghc }}
                  cabal-version: ${{ matrix.cabal }}
            - uses: mstksg/setup-stack@v1
            - name: Setup Dhall to yaml
              if: runner.os == 'Linux'
              run: .travis/install-dhall-to-yaml.sh
            - name: Install dependencies to ${{ matrix.os }}
              run: stack --system-ghc build --only-dependencies
            - name: Build htcc to ${{ matrix.os }}
              run: stack --system-ghc install
            - name: Test htcc on ${{ matrix.os }}
              if: runner.os == 'Linux'
              run: |
                  stack --system-ghc test --test-arguments self
                  stack --system-ghc test --test-arguments subp
            - name: Compile and execute example C codes on ${{ matrix.os }}
              if: runner.os == 'Linux'
              run: |
                  make
                  cd dist
                  ./knapsack && ./merge_sorting_linked_list && ./shuffle_and_sort
              working-directory: ./example
            - name: Test htcc on ${{ matrix.os }} with Docker
              run: |
                  stack --system-ghc test --test-arguments docker
                  stack --system-ghc test --test-arguments docker --test-arguments --clean
            - name: Compile and execute example C codes on ${{ matrix.os }} with Docker
              run: |
                  make docker
                  make clean_docker
              working-directory: ./example
