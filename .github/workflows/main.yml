name: CI
on:
  push:
    branches:
      - master
      - develop

jobs:
    test:
        name: htcc test
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os:
                    - ubuntu-18.04
                    - ubuntu-16.04
                # - windows-latest
                # - macos-latest
                ghc: ["8.6.5"]
                cabal: ["3.0"]
                cache-version: ["v4"]
        steps:
            - uses: actions/checkout@v2
            - name: Setup Haskell to ${{ matrix.os }} (GHC ${{ matrix.ghc }})
              uses: actions/setup-haskell@v1.1.3
              with:
                  enable-stack: latest
                  ghc-version: ${{ matrix.ghc }}
                  cabal-version: ${{ matrix.cabal }}
            - name: Cache
              uses: actions/cache@v2
              id: stack-cache
              with:
                path: ~/.stack
                key: stack-v2-${{ runner.os }}-${{ hashFiles('stack.yaml') }} 
            - name: Setup Stack
              if: steps.stack-cache.outputs.cache-hit != 'true'
              run: |
                stack config set system-ghc --global true
                stack config set install-ghc --global false
            - name: Setup Dhall to yaml
              if: runner.os == 'Linux'
              run: .travis/install-dhall-to-yaml.sh
            - name: Install dependencies to ${{ matrix.os }}
              run: stack build --only-dependencies
            - name: Build htcc to ${{ matrix.os }}
              run: stack install
            - name: Test htcc on ${{ matrix.os }}
              if: runner.os == 'Linux'
              run: |
                  stack test --test-arguments self
                  stack test --test-arguments subp
            - name: Compile and execute example C codes on ${{ matrix.os }}
              if: runner.os == 'Linux'
              run: |
                  make
                  cd dist
                  ./knapsack && ./merge_sorting_linked_list && ./shuffle_and_sort
              working-directory: ./example
            - name: Test htcc on ${{ matrix.os }} with Docker
              run: |
                  stack test --test-arguments docker
                  stack test --test-arguments docker --test-arguments --clean
            - name: Compile and execute example C codes on ${{ matrix.os }} with Docker
              run: |
                  make docker
                  make clean_docker
              working-directory: ./example
